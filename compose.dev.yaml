services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    image: altee-core:dev
    container_name: altee-core-dev
    ports:
      - "3000:3000"
    volumes:
      # ソースコードをマウント（ホットリロード対応）
      - .:/app
      # node_modulesは除外（コンテナ内のものを使用）
      - /app/node_modules
      - /app/.next
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - DATABASE_URL=postgresql://postgres:password@db:5432/altee_dev?schema=public
      - STORAGE_ENDPOINT=http://s3proxy:80
      - STORAGE_ACCESS_KEY=altee-access-key
      - STORAGE_SECRET_KEY=altee-secret-key-12345
      - STORAGE_BUCKET=images
      - STORAGE_REGION=c3j1
      - STORAGE_FORCE_PATH_STYLE=true
      - NEXT_PUBLIC_STORAGE_URL=http://localhost:3000/api/files
    command: npm run dev
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - altee-network

  db:
    image: postgres:17.4
    container_name: altee-core-db-dev
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=altee_dev
    volumes:
      - altee_dev_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - altee-network

  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    image: altee-core:dev
    container_name: altee-core-prisma-studio
    ports:
      - "5555:5555"
    volumes:
      # ソースコードをマウント（prisma/schema.prismaアクセス用）
      - .:/app
      - /app/node_modules
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/altee_dev?schema=public
    command: npx prisma studio --hostname 0.0.0.0 --port 5555
    depends_on:
      - db
    networks:
      - altee-network

  s3proxy:
    image: andrewgaul/s3proxy:2.6.0
    container_name: altee-core-s3proxy-dev
    ports:
      - "8081:80"  # S3Proxy API（コンテナ内では80番ポート）
    environment:
      - S3PROXY_AUTHORIZATION=aws-v2-or-v4
      - S3PROXY_IDENTITY=${CONOHA_ACCESS_KEY}
      - S3PROXY_CREDENTIAL=${CONOHA_SECRET_KEY}
      - S3PROXY_IGNORE_UNKNOWN_HEADERS=true
      - JCLOUDS_PROVIDER=openstack-swift
      - JCLOUDS_ENDPOINT=https://identity.c3j1.conoha.io/v3
      - JCLOUDS_IDENTITY=${CONOHA_TENANT_NAME}:${CONOHA_API_USER}
      - JCLOUDS_CREDENTIAL=${CONOHA_API_PASSWORD}
      - JCLOUDS_REGIONS=c3j1
      - JCLOUDS_REGION=c3j1
      - JCLOUDS_KEYSTONE_VERSION=3
      - JCLOUDS_KEYSTONE_SCOPE=project:${CONOHA_TENANT_NAME}
    restart: unless-stopped
    networks:
      - altee-network

volumes:
  altee_dev_db_data:

networks:
  altee-network:
    driver: bridge